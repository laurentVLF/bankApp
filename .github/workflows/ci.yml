name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Run ktlint
        run: ./gradlew ktlintCheck

      - name: Run Unit Tests
        run: ./gradlew test --no-daemon --stacktrace

      - name: Run Integration Tests
        run: ./gradlew cucumber --no-daemon --stacktrace

  build:
    name: Build and Upload Artifact
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build the project
        run: ./gradlew clean build --no-daemon --stacktrace

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-bank-artifact
          path: build/libs/*.jar

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Convert repository_owner to lowercase
        run: echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ env.REPO_OWNER_LOWER }}/mybankapp:latest .

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/${{ env.REPO_OWNER_LOWER }}/mybankapp:latest

  deploy-aws-ec2:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: my_bank_app_env
    needs: build-and-push-docker-image

    env:
      TF_VAR_private_key: ${{ secrets.PRIVATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Initialize Terraform
        run: terraform init
        working-directory: infra/

      - name: Plan Terraform
        run: terraform plan
        working-directory: infra/

      - name: Apply Terraform
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: infra/